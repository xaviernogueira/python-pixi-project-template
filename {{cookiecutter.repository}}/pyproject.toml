# https://pixi.sh/dev/advanced/pyproject_toml/
[project]
name = "{{cookiecutter.repository}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
authors = [{name = "{{cookiecutter.user}}", email = "{{cookiecutter.email}}"}]
readme = "README.md"

[project.urls]
repository = "https://github.com/{{cookiecutter.user}}/{{cookiecutter.repository}}"
documentation = "https://{{cookiecutter.user}}.github.io/{{cookiecutter.repository}}/"

[tool.hatch.build]
include = [
    "src/{{cookiecutter.package}}/**/*",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "linux-aarch64", "osx-arm64"]

[tool.pixi.dependencies]
python = "{{cookiecutter.python_version}}"
git = "*"
click = "*"

[tool.pixi.pypi-dependencies]
toml = "*"
invoke = "*"

[tool.pixi.feature.dev.dependencies]
bandit = "1.7.9.*"
coverage = "7.5.4.*"
pre-commit = "3.7.1.*"
mypy = "1.10.1.*"
pytest = "8.2.2.*"
pytest-cov = "5.0.0.*"
pytest-aiohttp = "*"
pytest-xdist = "3.6.1.*"
pytest-mock = "*"
pytest-asyncio = "*"
ruff = "0.5.0.*"
gh = "*"


[tool.pixi.feature.docs.dependencies]
pdoc = ">=14.0.0"

[tool.pixi.feature.notebook.dependencies]
jupyterlab = "*"
jupyterlab-lsp = "*"
python-lsp-server = "*"


[tool.pixi.environments]
build = ["build"]
dev = ["dev"]
docs = ["docs"]
notebook = ["notebook"]


[tool.pixi.tasks]
"{{cookiecutter.repository}}" = { cmd = "python -m {{cookiecutter.package}}.scripts" }
installs = { cmd = "invoke installs" }
checks = { cmd = "invoke checks" }
cleans = { cmd = "invoke cleans" }
container = { cmd = "invoke container" }
docs = { cmd = "invoke docs" }
formats = { cmd = "invoke formats" }
build = { cmd = "invoke build" }
build_editable = { cmd = "invoke build --editable"  }
tests = { cmd = "invoke testing" }
local_coverage = { cmd = "invoke testing --calculate-coverage" }
check_action = { cmd = "invoke actions --check" }
test_action = { cmd = "invoke actions --test" }


# CONFIGURATIONS

[tool.bandit]
targets = ["src"]
skips = ["B101"] # skips warning about assert statement

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["__main__.py"]

[tool.mypy]
pretty = true
strict = true
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
disable_error_code = ["import-untyped", "misc"]

[tool.pytest.ini_options]
addopts = "--verbosity=2"
pythonpath = ["src"]

[tool.ruff]
fix = true
indent-width = 4
line-length = 100
target-version = "py311"
src = ["src"]

[tool.ruff.lint]
ignore = ["D100", "D103", "I001"]
extend-select = ["I"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"
