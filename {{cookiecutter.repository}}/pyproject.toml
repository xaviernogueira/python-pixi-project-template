# https://pixi.sh/dev/advanced/pyproject_toml/
[project]
name = "{{cookiecutter.repository}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
requires-python = "{{cookiecutter.python_version}}"
repository = "https://github.com/{{cookiecutter.user}}/{{cookiecutter.repository}}"
documentation = "https://{{cookiecutter.user}}.github.io/{{cookiecutter.repository}}/"
authors = ["{{cookiecutter.user}}"]
readme = "README.md"
license = "{{cookiecutter.license}}"
packages = [{ include = "{{cookiecutter.package}}", from = "src" }]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tool.pixi.dependencies]
python = "^{{cookiecutter.python_version}}"
loguru = "^0.7.2"
bandit = "^1.7.9"
coverage = "^7.5.4"
mypy = "^1.10.1"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.6.1"
ruff = "^0.5.0"
pre-commit = "^3.7.1"
pdoc = "^14.5.1"

[tool.pixi.tasks]
"{{cookiecutter.repository}}" = { cmd = "python -m {{cookiecutter.package}}.scripts" }

# CONFIGURATIONS

[tool.bandit]
targets = ["src"]

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["__main__.py"]

[tool.mypy]
pretty = true
strict = true
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
disable_error_code = "import-untyped"

[tool.pytest.ini_options]
addopts = "--verbosity=2"
pythonpath = ["src"]

[tool.ruff]
fix = true
indent-width = 4
line-length = 100
target-version = "py312"
src = ["src"]

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D100", "D103"]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]
